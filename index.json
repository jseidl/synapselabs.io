[{"categories":["Home Automation"],"contents":"One of the things I like about the ESP family of micro-controllers is the amount of 3V3 and GND pins on the board. That allows us to use only dupont cables and saves us from the hassle (or if you\u0026rsquo;re terrible at soldering like me) of soldering stuff. This is an easy build, inspired by BRUH Automation\u0026rsquo;s $15 Multisensor but using ESPHome instead of custom code.\nI\u0026rsquo;ve spent lots of time building my own library for ESP sensors but when I gave ESPHome a try, I\u0026rsquo;ve immediately trashed all that code and migrated my all sensors into ESPHome. I never looked back and to date I\u0026rsquo;m 100% satisfied with that choice. It allows you to modify and deploy from Home Assistant\u0026rsquo;s ESPHome Add-On, handle unavailable states, have plenty of modules for different components and it\u0026rsquo;s just a breeze to use.\nWhat you\u0026rsquo;re gonna need  ESP8266 micro-controller DHT22 temperature \u0026amp; humidity sensor AM312 PIR motion sensor TEMT600 Analog Light Intensity Module 5mm Neopixel LED Some short dupont-cables. Optional: This 3D printed enclosure (requires 3D printer)  Note: I will not cover wiring up with the dupont cables as you can check this out on BRUH Automation\u0026rsquo;s video.\nTemperature \u0026amp; Humidity I left those at 60 seconds intervals, first because it\u0026rsquo;s a pretty acceptable update range for temperature sensing and second because DHT22s aren\u0026rsquo;t quite fond of being probed all the time. I also needed a lambda filter since the default output is in Celsius and I live in the United States and here we use freedom units, not the peasant metric system.\n- platform: dht\rpin: D6\rmodel: AM2302\rtemperature:\rname: \u0026#34;Temperature (MultiSensor)\u0026#34;\runit_of_measurement: \u0026#34;°F\u0026#34;\rfilters:\r- lambda: return x * (9.0/5.0) + 32.0; Illuminance I check those every 2 seconds and use a sliding_window_moving_average filter to iron out outliers. Without a filter you will see this sensor bounce around. I\u0026rsquo;ve also used the lambda filter according to TEMT600\u0026rsquo;s cookbook on ESPHome website in order to convert the ADC input into illuminance lux values.\n- platform: adc\rpin: A0\rname: \u0026#34;Illuminance (MultiSensor)\u0026#34;\rid: light_sensor\runit_of_measurement: lux\rupdate_interval: 2s\rfilters:\r- lambda: return (x * 3.3 / 10000.0) * 2000000.0;\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rPIR Motion sensor This is the most straightforward, just defined as a binary_sensor. Couldn\u0026rsquo;t be more straightforward and so far I didn\u0026rsquo;t felt the need for filtering.\n- platform: gpio\rpin: D5\rname: \u0026#34;Motion (MultiSensor)\u0026#34;\rdevice_class: motion\rTemplate sensor I use a template sensor to flip a binary_sensor called light whenever Illuminance crosses a given threshold (2 in my case). This is a useful feature if, for example, you want to only turn the lights on if the room is dark.\n- platform: template\rname: \u0026#34;Light (MultiSensor)\u0026#34;\rdevice_class: light\rlambda: |-\rif (id(light_sensor).state \u0026gt; 2) {\r return true;\r} else {\rreturn false;\r}\rNeopixel LED Having a Neopixel LED instead of a plain RGB led saves you some pins on the ESP8266 board and are exposed to Home Assistant as a light which you can control the color and brightness. I use with my automations in order to have a visual aid on the room occupancy status (OFF = clear, blue = occupied).\nlight:\r- platform: fastled_clockless\rchipset: WS2812\rpin: D3\rnum_leds: 1\rrgb_order: RGB\rname: \u0026#34;LED (MultiSensor)\u0026#34;\rFull code:\nesphome:\rname: multisensor\rplatform: ESP8266\rboard: nodemcuv2 # adjust accordingly for your board\r wifi:\rssid: \u0026#34;Your Wifi SSID\u0026#34;\rpassword: !secret wifi_password\r# Enable logging\r logger:\r# Enable Home Assistant API\r api:\rpassword: !secret api_password\rota:\rpassword: !secret ota_password\r# Sensors\r sensor:\r- platform: dht\rpin: D6\rmodel: AM2302\rtemperature:\rname: \u0026#34;Temperature (MultiSensor)\u0026#34;\runit_of_measurement: \u0026#34;°F\u0026#34;\rfilters:\r- lambda: return x * (9.0/5.0) + 32.0; humidity:\rname: \u0026#34;Humidity (MultiSensor)\u0026#34;\rupdate_interval: 60s\r- platform: adc\rpin: A0\rname: \u0026#34;Illuminance (MultiSensor)\u0026#34;\rid: light_sensor\runit_of_measurement: lux\rupdate_interval: 2s\rfilters:\r- lambda: return (x * 3.3 / 10000.0) * 2000000.0;\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rbinary_sensor:\r- platform: gpio\rpin: D5\rname: \u0026#34;Motion (MultiSensor)\u0026#34;\rdevice_class: motion\r- platform: template\rname: \u0026#34;Light (MultiSensor)\u0026#34;\rdevice_class: light\rlambda: |-\rif (id(light_sensor).state \u0026gt; 2) {\r return true;\r} else {\rreturn false;\r}\rlight:\r- platform: fastled_clockless\rchipset: WS2812\rpin: D3\rnum_leds: 1\rrgb_order: RGB\rname: \u0026#34;LED (MultiSensor)\u0026#34;\r","permalink":"https://synapselabs.io/posts/multisensors-with-esphome-on-homeassistant/","tags":["Home Assistant","ESP8266","ESPHome","Sensors","DHT22","AM312","TEMT6000","Neopixel","3D printing"],"title":"Building custom multisensors with an ESP8266 and ESPHome on Home Assistant"},{"categories":["Home Automation"],"contents":"If there\u0026rsquo;s one thing that makes everyone feels better despite having no friends, is having robots talking to you like they cared. From today on, every time you arrive home to your empty house because your partner divorced you and took your kids and your dog, you will feel that warmth in your heart.\nFor that, we\u0026rsquo;re gonna need the Better Presence Add-On for Home Assistant \u0026ndash; in order to know when we just arrived, a Door Sensor (I use Z-Wave Aeotec Door/Window Sensor 7) to know when we exactly open the front door and the Alexa Media Player custom component.\nWe will start by using the device_tracker sensor (created by Better Presence) as a trigger:\ntrigger:\r- platform: state\rentity_id: device_tracker.jseidl_presence\rto: \u0026#39;Just arrived\u0026#39;\rThe wait_template action type in Home Assistant\u0026rsquo;s the script syntax (used in automations) enables us to wait until a sensor gets into a given state before giving up (timeout configurable) and we will use that to make our automation wait until the front door is open.\n- wait_template: \u0026#34;{{ is_state(\u0026#39;binary_sensor.door_main\u0026#39;, \u0026#39;on\u0026#39;) }}\u0026#34;\rtimeout: \u0026#39;00:05:00\u0026#39;\rFinally, we use Alexa Media Player\u0026lsquo;s notify service endpoint to greet us:\n- service: notify.alexa_media_echo_dot_living_room\rdata:\rdata:\rtype: announce\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\r(Option #2) Use Google Assistant and Google Translate\u0026rsquo;s tts platform:\n- service: tts.google_translate_say\rentity_id: media_player.living_room_google_home\rdata:\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\rThe full code:\nautomation:\r- alias: \u0026#39;Greets when Jan arrives (Alexa)\u0026#39;\rtrigger:\r- platform: state\rentity_id: device_tracker.jseidl_presence\rto: \u0026#39;Just arrived\u0026#39;\rcondition:\r- condition: state\rentity_id: input_boolean.voice_notifications\rstate: \u0026#39;on\u0026#39;\raction:\r- wait_template: \u0026#34;{{ is_state(\u0026#39;binary_sensor.door_main\u0026#39;, \u0026#39;on\u0026#39;) }}\u0026#34;\rtimeout: \u0026#39;00:05:00\u0026#39;\r- service: notify.alexa_media_echo_dot_living_room\rdata:\rdata:\rtype: announce\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\rThat\u0026rsquo;s it! Hope that helps bringing a little more joy to your day!\n","permalink":"https://synapselabs.io/posts/using-alexa-to-greet-you-with-home-assistant/","tags":["Home Assistant","Alexa","Sensors"],"title":"Using Alexa to greet you with Home Assistant"},{"categories":null,"contents":"I\u0026rsquo;m a Brazilian information security warlock living in the US obssesed by robots!\n","permalink":"https://synapselabs.io/author/jan-seidl/","tags":null,"title":"Jan Seidl"}]