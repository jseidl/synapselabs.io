[{"categories":["Home Automation"],"contents":"After slapping around multiple ESPHome-based multisensors around the house, I needed a way to keep them from going off while I\u0026rsquo;m sleeping and I wasn\u0026rsquo;t quite fond of manually disabling and re-enabling the automations in a daily basis. In order to get Home Assistant to know when myself or my wife are in bed, I\u0026rsquo;ve decided to create custom bed occupancy sensors using a pair of bathroom scales, a pair of HX711 load-cell sensors on top of the same framework (ESPHome).\nWhat you\u0026rsquo;re gonna need  ESP32 micro-controller Two HX711 load-cell sensor Some short dupont-cables Optional: 4-conductor (RJ11) telephone cable + dual line RJ11 keystone box  Wiring it up Usually the boards on the bathroom scales have already labeled the S+, S-, E+, E- pads. Just solder those pads to the respective pads on the HX711 and in the other end, connect V, GND, DOUT and CLK to the ESP32. I\u0026rsquo;ve used short cables to wire the bathroom scale side to the HX711 and house the IC inside the bathroom scale cover, drilled a hole to pass the cables through and used a 4-conductor telephone cable and a two-line keystone box to connect the HX711 to the ESP32 (the cable between the keystone box and the ESP32 is a regular ethernet cable because it has all 8 conductors needed).\nBathroom scale board \u0026amp; drilled enclosure.\nFrom left to right: Assembled, HX711 wiring, RJ11 keystone terminals on an ethernet cable, wiring on ESP32 end.\nSetting up the sensor in ESPHome is really easy:\nsensor:\r- platform: hx711\rname: \u0026#34;Bed Weight (L)\u0026#34;\rid: bed_weight_l\rdout_pin: 12\rclk_pin: 14\rWe\u0026rsquo;ll be calibrating and adding filtering to this sensor next.\nCalibrating the HX711 sensors Out of the box the numbers spat out by the HX711 means nothing much. In order to calibrate you start by taking note of the values when there is no-load (or just the expected normal load \u0026ndash; the mattress and bed sheets in this case) and you will need to do the same with at least one known-weight load (thus more is better) on top of your scale and take note of the numbers shown, average them and use in the calibrate_linear filter on ESPHome.\nI had my full clothes hamper at hand so I weighted myself holding it in a regular bathroom scale, then weighted myself alone and subtracted both weights to get the weight of the clothes hamper (5.6kg \u0026ndash; I know, not freedom units), then used it as a known-weight to calibrate my bed sensor. I also used my faithful sliding_window_moving_average filter to iron out erroneous readings and help false-negatives while changing sleep positions at night.\nfilters:\r- calibrate_linear:\r- 66000 -\u0026gt; 0\r- 145000 -\u0026gt; 5.6\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rWatch out about WiFi powersave On ESPHome, the default setting for power_save_mode under wifi for ESP32s is LIGHT and that will make your sensor go unavailable from time to time due the ESP32 disconnecting from WiFi in order to save power. Make sure to change it to none to have it available all the time (we\u0026rsquo;re running constant power through USB so no worries there).\nwifi:\rssid: \u0026#34;Your Wifi SSID\u0026#34;\rpassword: !secret wifi_password\rpower_save_mode: none\rFull code\nesphome:\rname: meistersensor_bedsensor\rplatform: ESP32\rboard: nodemcu-32s\rwifi:\rssid: \u0026#34;Your Wifi SSID\u0026#34;\rpassword: !secret wifi_password\rpower_save_mode: none\r# Enable logging\r logger:\r# Enable Home Assistant API\r api:\rpassword: !secret api_ota_password\rota:\rpassword: !secret api_ota_password\rsensor:\r- platform: hx711\rname: \u0026#34;Bed Weight (L)\u0026#34;\rid: bed_weight_l\rdout_pin: 12\rclk_pin: 14\rfilters:\r- calibrate_linear:\r- 66000 -\u0026gt; 0\r- 145000 -\u0026gt; 5.6\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rupdate_interval: 2s\runit_of_measurement: kg\raccuracy_decimals: 2\r- platform: hx711\rname: \u0026#34;Bed Weight (R)\u0026#34;\rid: bed_weight_r\rdout_pin: 19\rclk_pin: 18\rfilters:\r- calibrate_linear:\r- 435000 -\u0026gt; 0\r- 512000 -\u0026gt; 5.6\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rupdate_interval: 2s\runit_of_measurement: kg\raccuracy_decimals: 2\rbinary_sensor:\r- platform: template\rname: \u0026#34;Bed Occupancy (Left)\u0026#34;\rdevice_class: occupancy\rlambda: |-\rif (id(bed_weight_l).state \u0026gt; 10) {\r return true;\r} else {\rreturn false;\r}\r- platform: template\rname: \u0026#34;Bed Occupancy (Right)\u0026#34;\rdevice_class: occupancy\rlambda: |-\rif (id(bed_weight_r).state \u0026gt; 10) {\r return true;\r} else {\rreturn false;\r}\rCreating groups for the bed occupancy Groups are useful for a bunch of stuff. We\u0026rsquo;ll use in our sensor to create two more pseudo sensors to indicate wether the bed is occupied and/or full.\ngroup:\rbed_occupied:\rname: \u0026#34;Bed Occupied\u0026#34;\rentities:\r- binary_sensor.bed_occupancy_left\r- binary_sensor.bed_occupancy_right\rbed_full:\rname: \u0026#34;Bed Full\u0026#34;\rentities:\r- binary_sensor.bed_occupancy_left\r- binary_sensor.bed_occupancy_right\rall: true\rI usually also pair them with a Template binary_sensor to make them prettier:\nbinary_sensor:\r- platform: template\rsensors:\r# Bed Sensors\r bed_occupied:\rfriendly_name: Bed Occupied (Master Bedroom)\rdevice_class: occupancy\rvalue_template: \u0026gt;-\r{{ is_state(\u0026#39;group.bed_occupied\u0026#39;, \u0026#39;on\u0026#39;) }}\r bed_full:\rfriendly_name: Bed Full (Master Bedroom)\rdevice_class: occupancy\rvalue_template: \u0026gt;-\r{{ is_state(\u0026#39;group.bed_full\u0026#39;, \u0026#39;on\u0026#39;) }}\r Automate your bed Now that you can sense occupancy on you bed, you can go crazy with the automations. See below a curated list of my bed automations.\n Turn off all lights when bed_full Turn on the alarm at night when bed_full Turn off the alarm in the morning when not bed_full Turn on the lightstrips under the bed when (movement in front of the nightstand) when not bed_occupied (night lights) Disable Alexa voice notifications (input_boolean.voice_notifications) when bed_occupied  That\u0026rsquo;s all for today folks! If you have any questions or comments, please leave below!\n","permalink":"https://synapselabs.io/posts/bed-sensor-with-esphome-on-homeassistant/","tags":["Home Assistant","ESP8266","ESPHome","Sensors","HC-SR04"],"title":"Making a bed occupancy sensor with bathroom scales, ESP32, HX711 load-cell sensors and ESPHome on Home Assistant"},{"categories":["Home Automation"],"contents":"One of the things I like about the ESP family of micro-controllers is the amount of 3V3 and GND pins on the board. That allows us to use only dupont cables and saves us from the hassle (or if you\u0026rsquo;re terrible at soldering like me) of soldering stuff. This is an easy build, inspired by BRUH Automation\u0026rsquo;s $15 Multisensor but using ESPHome instead of custom code.\nI\u0026rsquo;ve spent lots of time building my own library for ESP sensors but when I gave ESPHome a try, I\u0026rsquo;ve immediately trashed all that code and migrated my all sensors into ESPHome. I never looked back and to date I\u0026rsquo;m 100% satisfied with that choice. It allows you to modify and deploy from Home Assistant\u0026rsquo;s ESPHome Add-On, handle unavailable states, have plenty of modules for different components and it\u0026rsquo;s just a breeze to use.\nWhat you\u0026rsquo;re gonna need  ESP8266 micro-controller DHT22 temperature \u0026amp; humidity sensor AM312 PIR motion sensor TEMT600 Analog Light Intensity Module 5mm Neopixel LED Some short dupont-cables. Optional: This 3D printed enclosure (requires 3D printer)  Note: I will not cover wiring up with the dupont cables as you can check this out on BRUH Automation\u0026rsquo;s video.\nTemperature \u0026amp; Humidity I left those at 60 seconds intervals, first because it\u0026rsquo;s a pretty acceptable update range for temperature sensing and second because DHT22s aren\u0026rsquo;t quite fond of being probed all the time. I also needed a lambda filter since the default output is in Celsius and I live in the United States and here we use freedom units, not the peasant metric system.\n- platform: dht\rpin: D6\rmodel: AM2302\rtemperature:\rname: \u0026#34;Temperature (MultiSensor)\u0026#34;\runit_of_measurement: \u0026#34;Â°F\u0026#34;\rfilters:\r- lambda: return x * (9.0/5.0) + 32.0; Illuminance I check those every 2 seconds and use a sliding_window_moving_average filter to iron out outliers. Without a filter you will see this sensor bounce around. I\u0026rsquo;ve also used the lambda filter according to TEMT600\u0026rsquo;s cookbook on ESPHome website in order to convert the ADC input into illuminance lux values.\n- platform: adc\rpin: A0\rname: \u0026#34;Illuminance (MultiSensor)\u0026#34;\rid: light_sensor\runit_of_measurement: lux\rupdate_interval: 2s\rfilters:\r- lambda: return (x * 3.3 / 10000.0) * 2000000.0;\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rPIR Motion sensor This is the most straightforward, just defined as a binary_sensor. Couldn\u0026rsquo;t be more straightforward and so far I didn\u0026rsquo;t felt the need for filtering.\n- platform: gpio\rpin: D5\rname: \u0026#34;Motion (MultiSensor)\u0026#34;\rdevice_class: motion\rTemplate sensor I use a template sensor to flip a binary_sensor called light whenever Illuminance crosses a given threshold (2 in my case). This is a useful feature if, for example, you want to only turn the lights on if the room is dark.\n- platform: template\rname: \u0026#34;Light (MultiSensor)\u0026#34;\rdevice_class: light\rlambda: |-\rif (id(light_sensor).state \u0026gt; 2) {\r return true;\r} else {\rreturn false;\r}\rNeopixel LED Having a Neopixel LED instead of a plain RGB led saves you some pins on the ESP8266 board and are exposed to Home Assistant as a light which you can control the color and brightness. I use with my automations in order to have a visual aid on the room occupancy status (OFF = clear, blue = occupied).\nlight:\r- platform: fastled_clockless\rchipset: WS2812\rpin: D3\rnum_leds: 1\rrgb_order: RGB\rname: \u0026#34;LED (MultiSensor)\u0026#34;\rFull code:\nesphome:\rname: multisensor\rplatform: ESP8266\rboard: nodemcuv2 # adjust accordingly for your board\r wifi:\rssid: \u0026#34;Your Wifi SSID\u0026#34;\rpassword: !secret wifi_password\r# Enable logging\r logger:\r# Enable Home Assistant API\r api:\rpassword: !secret api_password\rota:\rpassword: !secret ota_password\r# Sensors\r sensor:\r- platform: dht\rpin: D6\rmodel: AM2302\rtemperature:\rname: \u0026#34;Temperature (MultiSensor)\u0026#34;\runit_of_measurement: \u0026#34;Â°F\u0026#34;\rfilters:\r- lambda: return x * (9.0/5.0) + 32.0; humidity:\rname: \u0026#34;Humidity (MultiSensor)\u0026#34;\rupdate_interval: 60s\r- platform: adc\rpin: A0\rname: \u0026#34;Illuminance (MultiSensor)\u0026#34;\rid: light_sensor\runit_of_measurement: lux\rupdate_interval: 2s\rfilters:\r- lambda: return (x * 3.3 / 10000.0) * 2000000.0;\r- sliding_window_moving_average:\rwindow_size: 5\rsend_every: 5\rbinary_sensor:\r- platform: gpio\rpin: D5\rname: \u0026#34;Motion (MultiSensor)\u0026#34;\rdevice_class: motion\r- platform: template\rname: \u0026#34;Light (MultiSensor)\u0026#34;\rdevice_class: light\rlambda: |-\rif (id(light_sensor).state \u0026gt; 2) {\r return true;\r} else {\rreturn false;\r}\rlight:\r- platform: fastled_clockless\rchipset: WS2812\rpin: D3\rnum_leds: 1\rrgb_order: RGB\rname: \u0026#34;LED (MultiSensor)\u0026#34;\r","permalink":"https://synapselabs.io/posts/multisensors-with-esphome-on-homeassistant/","tags":["Home Assistant","ESP8266","ESPHome","Sensors","DHT22","AM312","TEMT6000","Neopixel","3D printing"],"title":"Building custom multisensors with an ESP8266 and ESPHome on Home Assistant"},{"categories":["Home Automation"],"contents":"If there\u0026rsquo;s one thing that makes everyone feels better despite having no friends, is having robots talking to you like they cared. From today on, every time you arrive home to your empty house because your partner divorced you and took your kids and your dog, you will feel that warmth in your heart.\nFor that, we\u0026rsquo;re gonna need the Better Presence Add-On for Home Assistant \u0026ndash; in order to know when we just arrived, a Door Sensor (I use Z-Wave Aeotec Door/Window Sensor 7) to know when we exactly open the front door and the Alexa Media Player custom component.\nWe will start by using the device_tracker sensor (created by Better Presence) as a trigger:\ntrigger:\r- platform: state\rentity_id: device_tracker.jseidl_presence\rto: \u0026#39;Just arrived\u0026#39;\rThe wait_template action type in Home Assistant\u0026rsquo;s the script syntax (used in automations) enables us to wait until a sensor gets into a given state before giving up (timeout configurable) and we will use that to make our automation wait until the front door is open.\n- wait_template: \u0026#34;{{ is_state(\u0026#39;binary_sensor.door_main\u0026#39;, \u0026#39;on\u0026#39;) }}\u0026#34;\rtimeout: \u0026#39;00:05:00\u0026#39;\rFinally, we use Alexa Media Player\u0026lsquo;s notify service endpoint to greet us:\n- service: notify.alexa_media_echo_dot_living_room\rdata:\rdata:\rtype: announce\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\r(Option #2) Use Google Assistant and Google Translate\u0026rsquo;s tts platform:\n- service: tts.google_translate_say\rentity_id: media_player.living_room_google_home\rdata:\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\rThe full code:\nautomation:\r- alias: \u0026#39;Greets when Jan arrives (Alexa)\u0026#39;\rtrigger:\r- platform: state\rentity_id: device_tracker.jseidl_presence\rto: \u0026#39;Just arrived\u0026#39;\rcondition:\r- condition: state\rentity_id: input_boolean.voice_notifications\rstate: \u0026#39;on\u0026#39;\raction:\r- wait_template: \u0026#34;{{ is_state(\u0026#39;binary_sensor.door_main\u0026#39;, \u0026#39;on\u0026#39;) }}\u0026#34;\rtimeout: \u0026#39;00:05:00\u0026#39;\r- service: notify.alexa_media_echo_dot_living_room\rdata:\rdata:\rtype: announce\rmessage: \u0026#39;Welcome home Jan!\u0026#39;\rThat\u0026rsquo;s it! Hope that helps bringing a little more joy to your day!\n","permalink":"https://synapselabs.io/posts/using-alexa-to-greet-you-with-home-assistant/","tags":["Home Assistant","Alexa","Sensors"],"title":"Using Alexa to greet you with Home Assistant"},{"categories":null,"contents":"I\u0026rsquo;m a Brazilian information security warlock living in the US obssesed by robots!\n","permalink":"https://synapselabs.io/author/jan-seidl/","tags":null,"title":"Jan Seidl"}]